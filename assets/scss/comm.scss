@import 'variables', 'mixins', 'fonts', 'reset';

// btn style (*mixin에서 해도 되고 comm에서 해도 됨)

// card style

// list style

// layout
.wrap {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}
.inner {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 20px;
    
}
#header {
    height: $hdH;
    
}

#main {
    // min-height: calc(100vh -$hdH -$ftH);
    //  > hd, ft의 유무에 따라 다르게 계산해줘야 해서 불편할 수도 있음
    //  >> .wrap(dsp(flex), flex-dir(column), min-height & .main(fg1)로 설정
    //      페이지별로 따로 빼주지않아도 되니까 더욱 편리
    flex-grow: 1;
}

#footer {
    height: $ftH;
    background-color: $gray-100;
}
@media screen and (min-width: 1280px) {
    .inner {
        padding: 0;
    }
}

// header
#logo {
    position: relative;
    z-index: 1100;
    a {
        display: flex;
        align-items: center;
        height: $hdH;
    }
}
#header {
    .inner {
        // @include flexSpaceBetween
        @include flex($justify: space-between);
        // : mixin flex를 가져오되, jstify만 space-between으로 하겠다
        }
    .col-right {
        display: flex;
        flex-direction: row-reverse;   
    }
    .util {
        display: none;
        ul {
            display: flex;
        }
        a {
            display: flex;
            align-items: center;
            height: $hdH;
        }
        .link-g {
            display: flex;
            align-items: center;
            height: $hdH;
            &::before {
                font-family: 'Font Awesome 6 Free';
                font-weight: 900;
            }
        }
        .link-lang {
            &::before {
                content: '\f0ac';
            }
        }
        .link-search {
            &::before {
                content: '\f002';
            }
        }
        .link-my {
            &::before {
                content: '\f007';
            }
        }
    }
}
.gnb-wrap {
    .inp-burger {
        // display none으로 날리면 안됨. 체크가 되어야하니까
        // 아래 8개 설정으로 날려준다 (저장해놓고 쓰기)
        position: absolute;
        top: 0;
        left: 0;
        width: 0;
        height: 0;
        border: none;
        opacity: 0;
        visibility: hidden;
        // input이 체크됐을 때
        &:checked {
            // + : 형제 선택자 (바로 뒤에 있는 인접 형제)
            & + .label-burger {
                // input이 체크됐을 때 디자인
                .bar {
                    // 2번째 bar 없애기
                    &:nth-child(1) {
                        transform: translateY(3px) rotate(45deg);
                    }
                    &:nth-child(2) {
                        display: none;
                    }
                    &:nth-child(3) {
                        transform: translateY(-3px) rotate(-45deg);
                    }
                }
            }

            // #gnb가 보이게
            // ~ :형제 선택자 (일반 형제 선택)
            & ~ #gnb {
                display: flex;
                left: 0;
            }
        }
    }
    // input이 체크되지 않았을 때 디자인
    .label-burger {
        position: relative;
        z-index: 1100;
        display: flex;
        flex-direction: column;
        gap: 3px;
        width: 70px;
        height: 70px;
        cursor: pointer;
        .bar {
            display: block;
            width: 40px;
            height: 5px;
            border-radius: 3px;
            background-color: black;
            transition: all 0.3s;
        }
    }
}

#gnb {
    // display: none;
    position: fixed;
    top: 0;
    left: 100%;
    bottom: 0;
    z-index: 1000;
    display: flex;
    justify-content: center;
    width: 100%;
    padding-top: 100px;
    background-color: $white;
    transition: all 0.3s;
}

// footer

// 우선순위 때문에 main, sub는 뒤로 빼줌
@import 'main', 'sub1';